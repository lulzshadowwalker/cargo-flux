<?php

namespace App\Filament\Exports;

use App\Models\Customer;
use Filament\Actions\Exports\ExportColumn;
use Filament\Actions\Exports\Exporter;
use Filament\Actions\Exports\Models\Export;

class CustomerExporter extends Exporter
{
    protected static ?string $model = Customer::class;

    public static function getColumns(): array
    {
        return [
            ExportColumn::make('id')
                ->label('ID'),

            ExportColumn::make('user.fullName')
                ->label('Name'),

            ExportColumn::make('user.phone')
                ->label('Phone'),

            ExportColumn::make('user.email')
                ->label('Email'),

            ExportColumn::make('upcoming_orders')
                ->label('Upcoming Orders')
                    ->state(function ($record) {
                        if ($activeOrder = $record->orders()->active()->first()) {
                            return $activeOrder->status;
                        }

                        if ($record->orders()->scheduled()->count() > 0) {
                            return OrderStatus::SCHEDULED;
                        }

                        return 'none';
                    }),

            ExportColumn::make('order_count')
                ->label('Orders'),

            ExportColumn::make('status')
                ->label('Status'),

            ExportColumn::make('company_name')
                ->labl('Company'),

            ExportColumn::make('created_at')
                ->label('Date Joined'),
        ];
    }

    public static function getCompletedNotificationBody(Export $export): string
    {
        $body = 'Your customer export has completed and ' . number_format($export->successful_rows) . ' ' . str('row')->plural($export->successful_rows) . ' exported.';

        if ($failedRowsCount = $export->getFailedRowsCount()) {
            $body .= ' ' . number_format($failedRowsCount) . ' ' . str('row')->plural($failedRowsCount) . ' failed to export.';
        }

        return $body;
    }
}
